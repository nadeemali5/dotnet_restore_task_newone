name: .NET 6 Build, Restore, and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up .NET 6 SDK (ensures .NET 6 is installed)
      - name: Set up .NET 6 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'  # Ensure .NET 6 is used across all steps

      # Step 3: Print the installed .NET SDK version to verify it's using .NET 6
      - name: Print .NET SDK version
        run: |
          dotnet --version  # Should show 6.x version

      # Step 4: Ensure .NET 6 is used with a global.json (if not already present in the repo)
      - name: Create global.json if not exists
        run: |
          if (-not (Test-Path 'global.json')) {
            Write-Host "Creating global.json to specify .NET 6 SDK"
            echo '{
              "sdk": {
                "version": "6.0.100"
              }
            }' > global.json
          }

      # Step 5: Restore dependencies with specified parameters
      - name: Restore dependencies
        run: |
          dotnet restore ./dotnet_restore_task_newone/dotnet_restore_task_newone.csproj /p:zipAfterPublish=true /p:modifyOutputPath=true /p:selectOrConfig=config /p:feedRestore="" /p:includeNuGetOrg=true

      # Step 6: Build the application
      - name: Build application
        run: dotnet build ./dotnet_restore_task_newone/dotnet_restore_task_newone.csproj --configuration Release

      # Step 7: Run the application
      - name: Run application
        run: |
          dotnet run --project ./dotnet_restore_task_newone/dotnet_restore_task_newone.csproj --configuration Release
